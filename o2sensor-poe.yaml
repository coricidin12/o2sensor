esphome:
  name: "o2sensor-poe"
  friendly_name: o2sensor-poe
  project:
    name: esphome.o2sensor
    version: dev
  includes:
    - o2test.h
  libraries:
    - Wire

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome


# wifi:                             #WiFi cannot be active at the same time as Ethernet, but useful to keep as a fallback
#   ssid: !secret wifi_ssid
#   password: !secret wifi_password

#   # Enable fallback hotspot (captive portal) in case wifi connection fails
#   ap:
#     ssid: "Est-Poe-32 Fallback Hotspot"
#     password: "taHUFO8DGHVi"

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO17_OUT
  phy_addr: 0
  power_pin: GPIO12

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
# captive_portal:

dashboard_import:
  package_import_url: github://coricidin12/o2sensor/o2sensor-poe.yaml@main
  import_full_config: true

i2c:
  sda: GPIO14
  scl: GPIO013
  scan: true

sensor:
- platform: custom
  lambda: |-
    auto my_sensor = new MyCustomSensor();
    App.register_component(my_sensor);
    return {my_sensor};

  sensors:
  - name: "o2 Level"
    unit_of_measurement: "%"
    accuracy_decimals: 1
